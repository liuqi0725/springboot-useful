spring:
  banner:
    charset: UTF-8
  messages:
    encoding: UTF-8
  datasource:

    druid:
      # mysql 5.7

      #
      # serverTimezone=UTC 时区会导致时间字段与实际查询时间不一致( 相差8-14小时不等)
      # allowMultiQueries 允许一次性执行多条 sql ，可以用于批量操作
      url: jdbc:mysql://192.168.0.197:3306/springboot-useful?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&useSSL=true&serverTimezone=UTC
      username: root
      password: w2j946^FQ=7K8
      initial-size: 1                            # 配置初始化大小（默认0）、最小、最大（默认8）
      min-idle: 1
      max-active: 20
      max-wait: 60000                           # 配置获取连接等待超时的时间
      pool-prepared-statements: true            # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大。 默认为false
      max-open-prepared-statements: 20          # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      time-between-eviction-runs-millis: 50000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      #min-evictable-idle-time-millis: 200000    # 配置一个连接在池中最小和最大生存的时间，单位是毫秒
      #max-evictable-idle-time-millis: 900000    # 配置一个连接在池中最小和最大生存的时间，单位是毫秒

      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
      # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1
      test-on-borrow: true                      # 申请连接时执行validationQuery检测连接是否有效 默认为true
      test-on-return: false                     # 归还连接时执行validationQuery检测连接是否有效 默认为false
      test-while-idle: true                     # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      stat-view-servlet:
        login-username: admin                   #配置监控页面访问登录名称
        login-password: admin                   #配置监控页面访问密码
      filter:
        stat:
          log-slow-sql: true                    #是否开启慢sql查询监控
          slow-sql-millis: 300                  #慢SQL执行时间【毫秒】
        slf4j:
          enabled: true
          statement-close-after-log-enabled: false
          statement-create-after-log-enabled:  false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false

    # 不用连接池
    # url: jdbc:mysql://192.168.0.197:3306/springboot-useful?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&useSSL=true&serverTimezone=UTC
    # username: root
    # password: w2j946^FQ=7K8
    # driver-class-name: com.mysql.cj.jdbc.Driver

  flyway:
    # 启用或禁用 flyway
    enabled: true
    # flyway 的 clean 命令会删除指定 schema 下的所有 table, 杀伤力太大了, 应该禁掉.
    clean-disabled: false
    # 当发现校验错误时是否自动调用clean，默认false.
    clean-on-validation-error: false
    # 设定 SQL 脚本的目录,多个路径使用逗号分隔, 比如取值为 classpath:db/migration,classpath:db/dev
    locations: classpath:db/dev,classpath:db/migration
    # 如果指定 schema 包含了其他表,但没有 flyway schema history 表的话, 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令.
    # 设置 spring.flyway.baseline-on-migrate 为 true 后, flyway 将在需要 baseline 的时候, 自动执行一次 baseline. =true
    baseline-on-migrate: true
    # 指定 baseline 的版本号,缺省值为 1, 低于该版本号的 SQL 文件, migrate 的时候被忽略. = 1
    baseline-version: 1
    # Encoding of SQL migrations (default: UTF-8)
    encoding: UTF-8
    # 设定 flyway 的 metadata 表名, 缺省为 flyway_schema_history
    # table: flyway_schema_history
    # 是否允许无序的迁移,开发环境最好开启 outOfOrder, 生产环境关闭 outOfOrder . = true
    out-of-order: true

server:
  tomcat:
    uri-encoding: UTF-8
  port: 8080